// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: leaderboard.sql

package db

import (
	"context"
)

const deleteScoresAfterTen = `-- name: DeleteScoresAfterTen :exec
DELETE FROM leaderboard
WHERE id NOT IN (
    SELECT id FROM leaderboard
    ORDER BY score DESC, timer ASC, created_at ASC
    LIMIT 10
)
`

func (q *Queries) DeleteScoresAfterTen(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteScoresAfterTen)
	return err
}

const insertNewScore = `-- name: InsertNewScore :exec
INSERT INTO leaderboard (user_name, score, timer)
VALUES ($1, $2, $3)
`

type InsertNewScoreParams struct {
	UserName string
	Score    int32
	Timer    int32
}

func (q *Queries) InsertNewScore(ctx context.Context, arg InsertNewScoreParams) error {
	_, err := q.db.ExecContext(ctx, insertNewScore, arg.UserName, arg.Score, arg.Timer)
	return err
}

const organizeTopTenList = `-- name: OrganizeTopTenList :exec
SELECT id, user_name, score, timer, created_at
FROM leaderboard
ORDER BY score DESC, timer ASC, created_at ASC
LIMIT 10
`

func (q *Queries) OrganizeTopTenList(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, organizeTopTenList)
	return err
}
